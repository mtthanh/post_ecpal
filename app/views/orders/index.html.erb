<h1>Listing orders</h1>
<div id="order-view">
<form>
<table id="table-list" cellspacing="0">
    <thead>
  <tr>
    <th><input type="checkbox" id="toggle-all"/></th>
    <th>Order number</th>
    <th>Order date</th>
    <th>Status</th>
    <th>Total</th>
    <th>Action</th>
  </tr>
  </thead>
   <tbody>
   </tbody>
</table>
<br />

<input type="button" value="New Order" id="new-order"/>
<input type="button" value="Delete" id="delete-order"/>
<div id="order-form-view">

</div>
</div>
</form>

<script type="text/template" id="order-item-template">
    <td class="center"><input type="checkbox" value="<@= id @>" class="cb-order"/></td>
    <td class="order_number"><@= order_number @></td>
    <td class="center order_date"><@= order_date @></td>
    <td><select class="status">
        <@ _.each(status_options, function(text, value) { @>
            <option value="<@= value @>" <@= (status == value)? 'selected="selected"' : '' @>><@= text @></option>
        <@ }); @>
    </select></td>
    <td class="right total"><@= total @></td>
    <td class="right"><a href="javascript:void(0);" class="edit-order">Edit</a>&nbsp;|&nbsp;<a href="javascript:void(0);" class="remove-order">Remove</a></td>
</script>

<script type="text/template" id="order-form-template">
    <legend><@= (is_new)? 'New': 'Edit' @> Order</legend>
    <form id="order-form">
        <table id="table-form">
            <tr>
                <th><label>Order Number</label></th>
                <td><input type="text" class="order_number" name="order_number" value="<@= order_number @>"/></td>
            </tr>
            <tr>
                <th><label>Order Date</label></th>
                <td><input type="text" class="order_date" name="order_date" value="<@= order_date @>"/></td>
            </tr>
            <tr>
                <th><label>Status</label></th>
                <td><select class="status" name="status">
                    <@ _.each(status_options, function(text, value) { @>
                        <option value="<@= value @>" <@= (status == value)? 'selected="selected"' : '' @>><@= text @></option>
                    <@ }); @>
                </select></td>
            </tr>
            <tr>
                <th><label>Total</label></th>
                <td><input type="text" class="total" name="total" value="<@= total @>"/></td>
            </tr>
         </table>
         <input type="button" id="update-order" value="<@= (is_new)? 'Create': 'Update' @> Order"/>
     </form>
</script>
<script type="text/javascript">
    var status_options = <%= raw Order::STATUS.to_json %>;
    
    var OrderModel = Backbone.Model.extend({
        urlRoot: '/orders',
        defaults: {
            id: null,
            order_number: "",
            order_date: (new Date()).getFullYear() + "-" + ((new Date()).getMonth() + 1) + "-" + (new Date()).getDate(),
            status: "<% Order::STATUS_PENDING %>",
            total: 0
        }
    });
    
    var OrderList = Backbone.Collection.extend({
        model: OrderModel,
        url: '/orders'
    });
    
    Orders = new OrderList();
    
    var OrderView = Backbone.View.extend({
        events: {
            "change select": "changeStatus",
            "click .edit-order": "editOrder",
            "click .remove-order": "removeOrder"

        },
        initialize: function(){
            //this.model.on('change', this.test, this);
            this.model.on('destroy', this.remove, this);
            this.model.on('sync', this.render, this);
        },
        template: _.template($('#order-item-template').html()),
        tagName: 'tr',
        render: function(){
            this.$el.html(this.template(this.model.toJSON())); 
        },
        remove: function(){
           this.$el.remove(); 
        },
        changeStatus: function(e){
            value = this.$(".status").val();
            this.model.save({status: value});
        },
        editOrder: function(){
            var order_form_view = new OrderFormView({model: this.model});
            $("#order-form-view").html(order_form_view.el);
            $("#order-form-view .order_date").datepicker({dateFormat: 'yy-mm-dd'});
        },
        removeOrder: function(){
            if (confirm("Do you want to delete this orders?")){
                this.model.destroy();
            }
        }
    });
    
    var OrderFormView = Backbone.View.extend({
        events: {
            'click #update-order': "saveOrder"
        },
        initialize: function(){
            this.model.set({is_new: this.model.isNew()});
            this.model.on('sync', this.saveSuccess, this);
            this.render();
        },
        tagName: 'fieldset',
        template: _.template($('#order-form-template').html()),
        render: function(){
            this.$el.html(this.template(this.model.toJSON()));
        },
        saveOrder: function(){
            var data = this.$("form").serializeObject();
            this.model.save(data);
        },
        saveSuccess: function(){
            if (this.model.get('is_new')){
                Orders.add(this.model);
            }
            this.remove();
        }
    });
    
    var AppView = Backbone.View.extend({
        el: $("#order-view"),
        
        events: {
            "click #toggle-all": "selectAll",
            "click #new-order": "newOrder",
            "click #delete-order": "deleteOrders"
        },
        
        initialize: function(){
            this.new_order = this.$("#new-order");
            this.all_checkbox = this.$("#toggle-all");
            
            Orders.on('add', this.addOne, this);
            Orders.on('reset', this.addAll, this);
            
            Orders.fetch();
        },
        addOne:function(orderItem){
            order_view = new OrderView({model: orderItem});
            order_view.render();
            this.$("#table-list tbody").append(order_view.el);
        },
        addAll: function(){
            Orders.each(this.addOne);
        },
        selectAll: function(){
            if (this.all_checkbox.attr("checked")){
                this.$(".cb-order").attr("checked", "true");
            } else {
                this.$(".cb-order").removeAttr("checked");
            }
        },
        newOrder: function(){
            var order_model = new OrderModel();
            var order_form_view = new OrderFormView({model: order_model});
            this.$("#order-form-view").html(order_form_view.el);
            $("#order-form-view .order_date").datepicker({dateFormat: 'yy-mm-dd'});
        },
        deleteOrders: function(){
            if (confirm("Do you want to delete the selected orders?")){
                this.$(".cb-order:checked").each(function(i, e){
                    var order_model = Orders.get($(e).val());
                    order_model.destroy();
                });
            }
        }
    });
    
    new AppView();
    
</script>

